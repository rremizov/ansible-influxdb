---
- name: Install system dependencies.
  apt:
    name: "{{ packages }}"
    update_cache: true
  vars:
    packages:
      - apt-transport-https
      - python3-pip
      - python3-setuptools

- name: Install python dependencies.
  pip:
    name: "{{ packages }}"
  vars:
    packages:
      - requests
      - influxdb
      - cryptography # To generate self-signed SSL certificates.

- name: Add InfluxDB key.
  get_url:
    url: "https://repos.influxdata.com/influxdata-archive_compat.key"
    dest: /etc/apt/trusted.gpg.d/influxdata-archive_compat.asc

- name: Add InfluxDB repository.
  apt_repository:
    repo: "deb [signed-by=/etc/apt/trusted.gpg.d/influxdata-archive_compat.asc] https://repos.influxdata.com/{{ ansible_lsb.id|lower }} {{ ansible_lsb.codename }} stable"
    state: present

- name: Install InfluxDB.
  apt:
    name: influxdb
    state: present
  notify:
    - start influxdb
    - create influxdb admin user

- meta: flush_handlers # Ensure InfluxDB is started before continuing.

- name: Generate an OpenSSL private key.
  openssl_privatekey:
    path: "{{ influxdb_ssl_privatekey_path }}"
    group: influxdb
    mode: 0640

- name: Generate an OpenSSL CSR.
  openssl_csr:
    path: "{{ influxdb_ssl_csr_path }}"
    privatekey_path: "{{ influxdb_ssl_privatekey_path }}"
    common_name: "{{ inventory_hostname }}"

- name: Generate a Self Signed OpenSSL certificate.
  openssl_certificate:
    path: "{{ influxdb_ssl_selfsigned_path }}"
    privatekey_path: "{{ influxdb_ssl_privatekey_path }}"
    csr_path: "{{ influxdb_ssl_csr_path }}"
    provider: selfsigned

- name: Install InfluxDB configuration.
  template:
    src: "influxdb.conf.j2"
    dest: "/etc/influxdb/influxdb.conf"
    owner: "root"
    group: "root"
    mode: 0644
  notify: restart influxdb

- meta: flush_handlers # Ensure InfluxDB is restarted before continuing.

- name: Create InfluxDB databases
  influxdb_database:
    database_name: "{{ item.database_name }}"
    hostname: "{{ item.hostname|default(omit) }}"
    password: "{{ item.password|default(omit) }}"
    login_password: "{{ item.login_password|default(omit) }}"
    port: "{{ item.port|default(omit) }}"
    ssl: "{{ item.ssl|default(omit) }}"
    state: "{{ item.state|default(omit) }}"
    timeout: "{{ item.timeout|default(omit) }}"
    udp_port: "{{ item.udp_port|default(omit) }}"
    use_udp: "{{ item.use_udp|default(omit) }}"
    username: "{{ item.username|default(omit) }}"
    login_username: "{{ item.login_username|default(omit) }}"
    validate_certs: "{{ item.validate_certs|default(omit) }}"
  loop: "{{ influxdb_databases }}"
  loop_control:
    label: "{{ item.hostname|default('localhost') }}:{{ item.port|default(8086) }}/{{ item.database_name }}"

- name: Create InfluxDB users.
  influxdb_user:
    admin: "{{ item.admin|default(omit) }}"
    grants: "{{ item.grants|default(omit) }}"
    hostname: "{{ item.hostname|default(omit) }}"
    password: "{{ item.password|default(omit) }}"
    login_password: "{{ item.login_password|default(omit) }}"
    port: "{{ item.port|default(omit) }}"
    proxies: "{{ item.proxies|default(omit) }}"
    retries: "{{ item.retries|default(omit) }}"
    ssl: "{{ item.ssl|default(omit) }}"
    state: "{{ item.state|default(omit) }}"
    timeout: "{{ item.timeout|default(omit) }}"
    udp_port: "{{ item.udp_port|default(omit) }}"
    use_udp: "{{ item.use_udp|default(omit) }}"
    user_name: "{{ item.user_name }}"
    user_password: "{{ item.user_password|default(omit) }}"
    username: "{{ item.username|default(omit) }}"
    login_username: "{{ item.login_username|default(omit) }}"
    validate_certs: "{{ item.validate_certs|default(omit) }}"
  loop: "{{ influxdb_users }}"
  loop_control:
    label: "{{ item.user_name }}@{{ item.hostname|default('localhost') }}:{{ item.port|default(8086) }}"
